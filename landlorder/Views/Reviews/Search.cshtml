@model IEnumerable<landlorder.ViewModels.SearchResultsViewModel>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = ViewBag.location + " Search | landlorder ";
}


<div class="searchwrapper">
    <div class="row nopadding">

        <div class="col-sm-7">
            <div class="map_container">
                <div id="map-canvas" class="map"></div>
            </div>
        </div>


        <div class="col-sm-5">
            <div class="search_container" id="search_container" style="overflow: auto;">
                <h3 class="search-title" id="results-title">Landlord reviews for "@ViewBag.address"</h3>

                <div class="seperator title"></div>

                <div id="relatedpropertyDIV" class="searchresults">
                    @foreach (var item in Model)
                    {
                        if (item.type == "exact-new")
                        {

                            <div class="item_holder">
                                <a href="DetailsNew/@item.formatted_address"><h4>@item.formatted_address</h4><h5>Reviews: @item.numofReviews</h5></a>
                            </div>
                        }
                        else
                        {
                            <div class="item_holder">
                                <a href="Details/@item.propertyID"><h4>@item.formatted_address</h4><h5>Reviews: @item.numofReviews</h5></a>
                            </div>
                        }

                        <input type="hidden" class="item" value="lat: @item.latitude, lng: @item.longitude" />
                        <div class="seperator"></div>
                    }

                </div>
                @Html.PagedListPager((IPagedList)@Model, page => Url.Action("Search", new { @locationinput = ViewBag.address, @pagenum = page}))

            </div>
        </div>

    </div>
</div>




<script>
    SetMap(@Model.First().latitude, @Model.First().longitude);
    GrabLocationData();
</script>






